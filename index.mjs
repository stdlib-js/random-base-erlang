// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-positive-integer@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as g}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import{isPrimitive as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";function f(e,t){return h(e)?g(t)?null:new TypeError(u("invalid argument. Second argument must be a positive number. Value: `%s`.",t)):new TypeError(u("invalid argument. First argument must be a positive integer. Value: `%s`.",e))}function v(e,t,n){var s,r;for(s=1,r=0;r<t;r++)s*=e();return-1/n*j(s)}function c(){var g,h,j,c,b,x;if(0===arguments.length)h=d();else if(1===arguments.length){if(!s(j=arguments[0]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",j));if(i(j,"prng")){if(!r(j.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));h=j.prng}else h=d(j)}else{if(b=f(x=arguments[0],g=arguments[1]))throw b;if(arguments.length>2){if(!s(j=arguments[2]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",j));if(i(j,"prng")){if(!r(j.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));h=j.prng}else h=d(j)}else h=d()}return e(c=void 0===x?V:P,"NAME","erlang"),j&&j.prng?(e(c,"seed",null),e(c,"seedLength",null),n(c,"state",o(null),m),e(c,"stateLength",null),e(c,"byteLength",null),e(c,"toJSON",o(null)),e(c,"PRNG",h)):(t(c,"seed",y),t(c,"seedLength",w),n(c,"state",E,O),t(c,"stateLength",L),t(c,"byteLength",N),e(c,"toJSON",T),e(c,"PRNG",h),h=h.normalized),c;function y(){return h.seed}function w(){return h.seedLength}function L(){return h.stateLength}function N(){return h.byteLength}function E(){return h.state}function O(e){h.state=e}function T(){var e={type:"PRNG"};return e.name=c.NAME,e.state=p(h.state),e.params=void 0===x?[]:[x,g],e}function P(){return v(h,x,g)}function V(e,t){return a(e)||a(t)||!l(e)||t<=0?NaN:v(h,e,t)}}var b=c();e(b,"factory",c);export{b as default,c as factory};
//# sourceMappingURL=index.mjs.map
